
00_angr_find:     file format elf32-i386


Disassembly of section .init:

08048394 <_init>:
 8048394:	53                   	push   %ebx
 8048395:	83 ec 08             	sub    $0x8,%esp
 8048398:	e8 e3 00 00 00       	call   8048480 <__x86.get_pc_thunk.bx>
 804839d:	81 c3 63 1c 00 00    	add    $0x1c63,%ebx
 80483a3:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80483a9:	85 c0                	test   %eax,%eax
 80483ab:	74 05                	je     80483b2 <_init+0x1e>
 80483ad:	e8 8e 00 00 00       	call   8048440 <__isoc99_scanf@plt+0x10>
 80483b2:	83 c4 08             	add    $0x8,%esp
 80483b5:	5b                   	pop    %ebx
 80483b6:	c3                   	ret    

Disassembly of section .plt:

080483c0 <strcmp@plt-0x10>:
 80483c0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483c6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483cc:	00 00                	add    %al,(%eax)
	...

080483d0 <strcmp@plt>:
 80483d0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483d6:	68 00 00 00 00       	push   $0x0
 80483db:	e9 e0 ff ff ff       	jmp    80483c0 <_init+0x2c>

080483e0 <printf@plt>:
 80483e0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483e6:	68 08 00 00 00       	push   $0x8
 80483eb:	e9 d0 ff ff ff       	jmp    80483c0 <_init+0x2c>

080483f0 <__stack_chk_fail@plt>:
 80483f0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483f6:	68 10 00 00 00       	push   $0x10
 80483fb:	e9 c0 ff ff ff       	jmp    80483c0 <_init+0x2c>

08048400 <puts@plt>:
 8048400:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048406:	68 18 00 00 00       	push   $0x18
 804840b:	e9 b0 ff ff ff       	jmp    80483c0 <_init+0x2c>

08048410 <exit@plt>:
 8048410:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048416:	68 20 00 00 00       	push   $0x20
 804841b:	e9 a0 ff ff ff       	jmp    80483c0 <_init+0x2c>

08048420 <__libc_start_main@plt>:
 8048420:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048426:	68 28 00 00 00       	push   $0x28
 804842b:	e9 90 ff ff ff       	jmp    80483c0 <_init+0x2c>

08048430 <__isoc99_scanf@plt>:
 8048430:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048436:	68 30 00 00 00       	push   $0x30
 804843b:	e9 80 ff ff ff       	jmp    80483c0 <_init+0x2c>

Disassembly of section .plt.got:

08048440 <.plt.got>:
 8048440:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048446:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048450 <_start>:
 8048450:	31 ed                	xor    %ebp,%ebp
 8048452:	5e                   	pop    %esi
 8048453:	89 e1                	mov    %esp,%ecx
 8048455:	83 e4 f0             	and    $0xfffffff0,%esp
 8048458:	50                   	push   %eax
 8048459:	54                   	push   %esp
 804845a:	52                   	push   %edx
 804845b:	68 10 87 04 08       	push   $0x8048710
 8048460:	68 b0 86 04 08       	push   $0x80486b0
 8048465:	51                   	push   %ecx
 8048466:	56                   	push   %esi
 8048467:	68 c7 85 04 08       	push   $0x80485c7
 804846c:	e8 af ff ff ff       	call   8048420 <__libc_start_main@plt>
 8048471:	f4                   	hlt    
 8048472:	66 90                	xchg   %ax,%ax
 8048474:	66 90                	xchg   %ax,%ax
 8048476:	66 90                	xchg   %ax,%ax
 8048478:	66 90                	xchg   %ax,%ax
 804847a:	66 90                	xchg   %ax,%ax
 804847c:	66 90                	xchg   %ax,%ax
 804847e:	66 90                	xchg   %ax,%ax

08048480 <__x86.get_pc_thunk.bx>:
 8048480:	8b 1c 24             	mov    (%esp),%ebx
 8048483:	c3                   	ret    
 8048484:	66 90                	xchg   %ax,%ax
 8048486:	66 90                	xchg   %ax,%ax
 8048488:	66 90                	xchg   %ax,%ax
 804848a:	66 90                	xchg   %ax,%ax
 804848c:	66 90                	xchg   %ax,%ax
 804848e:	66 90                	xchg   %ax,%ax

08048490 <deregister_tm_clones>:
 8048490:	b8 43 a0 04 08       	mov    $0x804a043,%eax
 8048495:	2d 40 a0 04 08       	sub    $0x804a040,%eax
 804849a:	83 f8 06             	cmp    $0x6,%eax
 804849d:	76 1a                	jbe    80484b9 <deregister_tm_clones+0x29>
 804849f:	b8 00 00 00 00       	mov    $0x0,%eax
 80484a4:	85 c0                	test   %eax,%eax
 80484a6:	74 11                	je     80484b9 <deregister_tm_clones+0x29>
 80484a8:	55                   	push   %ebp
 80484a9:	89 e5                	mov    %esp,%ebp
 80484ab:	83 ec 14             	sub    $0x14,%esp
 80484ae:	68 40 a0 04 08       	push   $0x804a040
 80484b3:	ff d0                	call   *%eax
 80484b5:	83 c4 10             	add    $0x10,%esp
 80484b8:	c9                   	leave  
 80484b9:	f3 c3                	repz ret 
 80484bb:	90                   	nop
 80484bc:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080484c0 <register_tm_clones>:
 80484c0:	b8 40 a0 04 08       	mov    $0x804a040,%eax
 80484c5:	2d 40 a0 04 08       	sub    $0x804a040,%eax
 80484ca:	c1 f8 02             	sar    $0x2,%eax
 80484cd:	89 c2                	mov    %eax,%edx
 80484cf:	c1 ea 1f             	shr    $0x1f,%edx
 80484d2:	01 d0                	add    %edx,%eax
 80484d4:	d1 f8                	sar    %eax
 80484d6:	74 1b                	je     80484f3 <register_tm_clones+0x33>
 80484d8:	ba 00 00 00 00       	mov    $0x0,%edx
 80484dd:	85 d2                	test   %edx,%edx
 80484df:	74 12                	je     80484f3 <register_tm_clones+0x33>
 80484e1:	55                   	push   %ebp
 80484e2:	89 e5                	mov    %esp,%ebp
 80484e4:	83 ec 10             	sub    $0x10,%esp
 80484e7:	50                   	push   %eax
 80484e8:	68 40 a0 04 08       	push   $0x804a040
 80484ed:	ff d2                	call   *%edx
 80484ef:	83 c4 10             	add    $0x10,%esp
 80484f2:	c9                   	leave  
 80484f3:	f3 c3                	repz ret 
 80484f5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80484f9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048500 <__do_global_dtors_aux>:
 8048500:	80 3d 3d a0 04 08 00 	cmpb   $0x0,0x804a03d
 8048507:	75 13                	jne    804851c <__do_global_dtors_aux+0x1c>
 8048509:	55                   	push   %ebp
 804850a:	89 e5                	mov    %esp,%ebp
 804850c:	83 ec 08             	sub    $0x8,%esp
 804850f:	e8 7c ff ff ff       	call   8048490 <deregister_tm_clones>
 8048514:	c6 05 3d a0 04 08 01 	movb   $0x1,0x804a03d
 804851b:	c9                   	leave  
 804851c:	f3 c3                	repz ret 
 804851e:	66 90                	xchg   %ax,%ax

08048520 <frame_dummy>:
 8048520:	b8 10 9f 04 08       	mov    $0x8049f10,%eax
 8048525:	8b 10                	mov    (%eax),%edx
 8048527:	85 d2                	test   %edx,%edx
 8048529:	75 05                	jne    8048530 <frame_dummy+0x10>
 804852b:	eb 93                	jmp    80484c0 <register_tm_clones>
 804852d:	8d 76 00             	lea    0x0(%esi),%esi
 8048530:	ba 00 00 00 00       	mov    $0x0,%edx
 8048535:	85 d2                	test   %edx,%edx
 8048537:	74 f2                	je     804852b <frame_dummy+0xb>
 8048539:	55                   	push   %ebp
 804853a:	89 e5                	mov    %esp,%ebp
 804853c:	83 ec 14             	sub    $0x14,%esp
 804853f:	50                   	push   %eax
 8048540:	ff d2                	call   *%edx
 8048542:	83 c4 10             	add    $0x10,%esp
 8048545:	c9                   	leave  
 8048546:	e9 75 ff ff ff       	jmp    80484c0 <register_tm_clones>

0804854b <print_msg>:
 804854b:	55                   	push   %ebp
 804854c:	89 e5                	mov    %esp,%ebp
 804854e:	83 ec 08             	sub    $0x8,%esp
 8048551:	83 ec 08             	sub    $0x8,%esp
 8048554:	68 30 a0 04 08       	push   $0x804a030
 8048559:	68 30 87 04 08       	push   $0x8048730
 804855e:	e8 7d fe ff ff       	call   80483e0 <printf@plt>
 8048563:	83 c4 10             	add    $0x10,%esp
 8048566:	90                   	nop
 8048567:	c9                   	leave  
 8048568:	c3                   	ret    

08048569 <complex_function>:
 8048569:	55                   	push   %ebp
 804856a:	89 e5                	mov    %esp,%ebp
 804856c:	83 ec 08             	sub    $0x8,%esp
 804856f:	83 7d 08 40          	cmpl   $0x40,0x8(%ebp)
 8048573:	7e 06                	jle    804857b <complex_function+0x12>
 8048575:	83 7d 08 5a          	cmpl   $0x5a,0x8(%ebp)
 8048579:	7e 1a                	jle    8048595 <complex_function+0x2c>
 804857b:	83 ec 0c             	sub    $0xc,%esp
 804857e:	68 33 87 04 08       	push   $0x8048733
 8048583:	e8 78 fe ff ff       	call   8048400 <puts@plt>
 8048588:	83 c4 10             	add    $0x10,%esp
 804858b:	83 ec 0c             	sub    $0xc,%esp
 804858e:	6a 01                	push   $0x1
 8048590:	e8 7b fe ff ff       	call   8048410 <exit@plt>
 8048595:	8b 45 08             	mov    0x8(%ebp),%eax
 8048598:	8d 48 bf             	lea    -0x41(%eax),%ecx
 804859b:	8b 55 0c             	mov    0xc(%ebp),%edx
 804859e:	89 d0                	mov    %edx,%eax
 80485a0:	01 c0                	add    %eax,%eax
 80485a2:	01 d0                	add    %edx,%eax
 80485a4:	01 c1                	add    %eax,%ecx
 80485a6:	ba 4f ec c4 4e       	mov    $0x4ec4ec4f,%edx
 80485ab:	89 c8                	mov    %ecx,%eax
 80485ad:	f7 ea                	imul   %edx
 80485af:	c1 fa 03             	sar    $0x3,%edx
 80485b2:	89 c8                	mov    %ecx,%eax
 80485b4:	c1 f8 1f             	sar    $0x1f,%eax
 80485b7:	29 c2                	sub    %eax,%edx
 80485b9:	89 d0                	mov    %edx,%eax
 80485bb:	6b c0 1a             	imul   $0x1a,%eax,%eax
 80485be:	29 c1                	sub    %eax,%ecx
 80485c0:	89 c8                	mov    %ecx,%eax
 80485c2:	83 c0 41             	add    $0x41,%eax
 80485c5:	c9                   	leave  
 80485c6:	c3                   	ret    

080485c7 <main>:
 80485c7:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80485cb:	83 e4 f0             	and    $0xfffffff0,%esp
 80485ce:	ff 71 fc             	pushl  -0x4(%ecx)
 80485d1:	55                   	push   %ebp
 80485d2:	89 e5                	mov    %esp,%ebp
 80485d4:	51                   	push   %ecx
 80485d5:	83 ec 34             	sub    $0x34,%esp
 80485d8:	89 c8                	mov    %ecx,%eax
 80485da:	8b 40 04             	mov    0x4(%eax),%eax
 80485dd:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 80485e0:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80485e6:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80485e9:	31 c0                	xor    %eax,%eax
 80485eb:	83 ec 0c             	sub    $0xc,%esp
 80485ee:	68 3e 87 04 08       	push   $0x804873e
 80485f3:	e8 e8 fd ff ff       	call   80483e0 <printf@plt>
 80485f8:	83 c4 10             	add    $0x10,%esp
 80485fb:	83 ec 08             	sub    $0x8,%esp
 80485fe:	8d 45 eb             	lea    -0x15(%ebp),%eax
 8048601:	50                   	push   %eax
 8048602:	68 53 87 04 08       	push   $0x8048753
 8048607:	e8 24 fe ff ff       	call   8048430 <__isoc99_scanf@plt>
 804860c:	83 c4 10             	add    $0x10,%esp
 804860f:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
 8048616:	eb 2d                	jmp    8048645 <main+0x7e>
 8048618:	8d 55 eb             	lea    -0x15(%ebp),%edx
 804861b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804861e:	01 d0                	add    %edx,%eax
 8048620:	0f b6 00             	movzbl (%eax),%eax
 8048623:	0f be c0             	movsbl %al,%eax
 8048626:	83 ec 08             	sub    $0x8,%esp
 8048629:	ff 75 e4             	pushl  -0x1c(%ebp)
 804862c:	50                   	push   %eax
 804862d:	e8 37 ff ff ff       	call   8048569 <complex_function>
 8048632:	83 c4 10             	add    $0x10,%esp
 8048635:	89 c1                	mov    %eax,%ecx
 8048637:	8d 55 eb             	lea    -0x15(%ebp),%edx
 804863a:	8b 45 e4             	mov    -0x1c(%ebp),%eax
 804863d:	01 d0                	add    %edx,%eax
 804863f:	88 08                	mov    %cl,(%eax)
 8048641:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
 8048645:	83 7d e4 07          	cmpl   $0x7,-0x1c(%ebp)
 8048649:	7e cd                	jle    8048618 <main+0x51>
 804864b:	83 ec 08             	sub    $0x8,%esp
 804864e:	68 57 87 04 08       	push   $0x8048757
 8048653:	8d 45 eb             	lea    -0x15(%ebp),%eax
 8048656:	50                   	push   %eax
 8048657:	e8 74 fd ff ff       	call   80483d0 <strcmp@plt>
 804865c:	83 c4 10             	add    $0x10,%esp
 804865f:	85 c0                	test   %eax,%eax
 8048661:	74 12                	je     8048675 <main+0xae>
 8048663:	83 ec 0c             	sub    $0xc,%esp
 8048666:	68 33 87 04 08       	push   $0x8048733
 804866b:	e8 90 fd ff ff       	call   8048400 <puts@plt>
 8048670:	83 c4 10             	add    $0x10,%esp
 8048673:	eb 10                	jmp    8048685 <main+0xbe>
 8048675:	83 ec 0c             	sub    $0xc,%esp
 8048678:	68 60 87 04 08       	push   $0x8048760
 804867d:	e8 7e fd ff ff       	call   8048400 <puts@plt>
 8048682:	83 c4 10             	add    $0x10,%esp
 8048685:	b8 00 00 00 00       	mov    $0x0,%eax
 804868a:	8b 4d f4             	mov    -0xc(%ebp),%ecx
 804868d:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 8048694:	74 05                	je     804869b <main+0xd4>
 8048696:	e8 55 fd ff ff       	call   80483f0 <__stack_chk_fail@plt>
 804869b:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 804869e:	c9                   	leave  
 804869f:	8d 61 fc             	lea    -0x4(%ecx),%esp
 80486a2:	c3                   	ret    
 80486a3:	66 90                	xchg   %ax,%ax
 80486a5:	66 90                	xchg   %ax,%ax
 80486a7:	66 90                	xchg   %ax,%ax
 80486a9:	66 90                	xchg   %ax,%ax
 80486ab:	66 90                	xchg   %ax,%ax
 80486ad:	66 90                	xchg   %ax,%ax
 80486af:	90                   	nop

080486b0 <__libc_csu_init>:
 80486b0:	55                   	push   %ebp
 80486b1:	57                   	push   %edi
 80486b2:	56                   	push   %esi
 80486b3:	53                   	push   %ebx
 80486b4:	e8 c7 fd ff ff       	call   8048480 <__x86.get_pc_thunk.bx>
 80486b9:	81 c3 47 19 00 00    	add    $0x1947,%ebx
 80486bf:	83 ec 0c             	sub    $0xc,%esp
 80486c2:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 80486c6:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80486cc:	e8 c3 fc ff ff       	call   8048394 <_init>
 80486d1:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80486d7:	29 c6                	sub    %eax,%esi
 80486d9:	c1 fe 02             	sar    $0x2,%esi
 80486dc:	85 f6                	test   %esi,%esi
 80486de:	74 25                	je     8048705 <__libc_csu_init+0x55>
 80486e0:	31 ff                	xor    %edi,%edi
 80486e2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80486e8:	83 ec 04             	sub    $0x4,%esp
 80486eb:	ff 74 24 2c          	pushl  0x2c(%esp)
 80486ef:	ff 74 24 2c          	pushl  0x2c(%esp)
 80486f3:	55                   	push   %ebp
 80486f4:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80486fb:	83 c7 01             	add    $0x1,%edi
 80486fe:	83 c4 10             	add    $0x10,%esp
 8048701:	39 f7                	cmp    %esi,%edi
 8048703:	75 e3                	jne    80486e8 <__libc_csu_init+0x38>
 8048705:	83 c4 0c             	add    $0xc,%esp
 8048708:	5b                   	pop    %ebx
 8048709:	5e                   	pop    %esi
 804870a:	5f                   	pop    %edi
 804870b:	5d                   	pop    %ebp
 804870c:	c3                   	ret    
 804870d:	8d 76 00             	lea    0x0(%esi),%esi

08048710 <__libc_csu_fini>:
 8048710:	f3 c3                	repz ret 

Disassembly of section .fini:

08048714 <_fini>:
 8048714:	53                   	push   %ebx
 8048715:	83 ec 08             	sub    $0x8,%esp
 8048718:	e8 63 fd ff ff       	call   8048480 <__x86.get_pc_thunk.bx>
 804871d:	81 c3 e3 18 00 00    	add    $0x18e3,%ebx
 8048723:	83 c4 08             	add    $0x8,%esp
 8048726:	5b                   	pop    %ebx
 8048727:	c3                   	ret    
