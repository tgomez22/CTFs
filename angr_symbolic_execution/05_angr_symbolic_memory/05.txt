
05_angr_symbolic_memory:     file format elf32-i386


Disassembly of section .init:

08048370 <_init>:
 8048370:	53                   	push   %ebx
 8048371:	83 ec 08             	sub    $0x8,%esp
 8048374:	e8 e7 00 00 00       	call   8048460 <__x86.get_pc_thunk.bx>
 8048379:	81 c3 87 1c 00 00    	add    $0x1c87,%ebx
 804837f:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 8048385:	85 c0                	test   %eax,%eax
 8048387:	74 05                	je     804838e <_init+0x1e>
 8048389:	e8 92 00 00 00       	call   8048420 <strncmp@plt+0x10>
 804838e:	83 c4 08             	add    $0x8,%esp
 8048391:	5b                   	pop    %ebx
 8048392:	c3                   	ret    

Disassembly of section .plt:

080483a0 <printf@plt-0x10>:
 80483a0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483a6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483ac:	00 00                	add    %al,(%eax)
	...

080483b0 <printf@plt>:
 80483b0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483b6:	68 00 00 00 00       	push   $0x0
 80483bb:	e9 e0 ff ff ff       	jmp    80483a0 <_init+0x30>

080483c0 <puts@plt>:
 80483c0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483c6:	68 08 00 00 00       	push   $0x8
 80483cb:	e9 d0 ff ff ff       	jmp    80483a0 <_init+0x30>

080483d0 <exit@plt>:
 80483d0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483d6:	68 10 00 00 00       	push   $0x10
 80483db:	e9 c0 ff ff ff       	jmp    80483a0 <_init+0x30>

080483e0 <__libc_start_main@plt>:
 80483e0:	ff 25 18 a0 04 08    	jmp    *0x804a018
 80483e6:	68 18 00 00 00       	push   $0x18
 80483eb:	e9 b0 ff ff ff       	jmp    80483a0 <_init+0x30>

080483f0 <memset@plt>:
 80483f0:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 80483f6:	68 20 00 00 00       	push   $0x20
 80483fb:	e9 a0 ff ff ff       	jmp    80483a0 <_init+0x30>

08048400 <__isoc99_scanf@plt>:
 8048400:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048406:	68 28 00 00 00       	push   $0x28
 804840b:	e9 90 ff ff ff       	jmp    80483a0 <_init+0x30>

08048410 <strncmp@plt>:
 8048410:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048416:	68 30 00 00 00       	push   $0x30
 804841b:	e9 80 ff ff ff       	jmp    80483a0 <_init+0x30>

Disassembly of section .plt.got:

08048420 <.plt.got>:
 8048420:	ff 25 fc 9f 04 08    	jmp    *0x8049ffc
 8048426:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

08048430 <_start>:
 8048430:	31 ed                	xor    %ebp,%ebp
 8048432:	5e                   	pop    %esi
 8048433:	89 e1                	mov    %esp,%ecx
 8048435:	83 e4 f0             	and    $0xfffffff0,%esp
 8048438:	50                   	push   %eax
 8048439:	54                   	push   %esp
 804843a:	52                   	push   %edx
 804843b:	68 f0 86 04 08       	push   $0x80486f0
 8048440:	68 90 86 04 08       	push   $0x8048690
 8048445:	51                   	push   %ecx
 8048446:	56                   	push   %esi
 8048447:	68 a8 85 04 08       	push   $0x80485a8
 804844c:	e8 8f ff ff ff       	call   80483e0 <__libc_start_main@plt>
 8048451:	f4                   	hlt    
 8048452:	66 90                	xchg   %ax,%ax
 8048454:	66 90                	xchg   %ax,%ax
 8048456:	66 90                	xchg   %ax,%ax
 8048458:	66 90                	xchg   %ax,%ax
 804845a:	66 90                	xchg   %ax,%ax
 804845c:	66 90                	xchg   %ax,%ax
 804845e:	66 90                	xchg   %ax,%ax

08048460 <__x86.get_pc_thunk.bx>:
 8048460:	8b 1c 24             	mov    (%esp),%ebx
 8048463:	c3                   	ret    
 8048464:	66 90                	xchg   %ax,%ax
 8048466:	66 90                	xchg   %ax,%ax
 8048468:	66 90                	xchg   %ax,%ax
 804846a:	66 90                	xchg   %ax,%ax
 804846c:	66 90                	xchg   %ax,%ax
 804846e:	66 90                	xchg   %ax,%ax

08048470 <deregister_tm_clones>:
 8048470:	b8 43 a0 04 08       	mov    $0x804a043,%eax
 8048475:	2d 40 a0 04 08       	sub    $0x804a040,%eax
 804847a:	83 f8 06             	cmp    $0x6,%eax
 804847d:	76 1a                	jbe    8048499 <deregister_tm_clones+0x29>
 804847f:	b8 00 00 00 00       	mov    $0x0,%eax
 8048484:	85 c0                	test   %eax,%eax
 8048486:	74 11                	je     8048499 <deregister_tm_clones+0x29>
 8048488:	55                   	push   %ebp
 8048489:	89 e5                	mov    %esp,%ebp
 804848b:	83 ec 14             	sub    $0x14,%esp
 804848e:	68 40 a0 04 08       	push   $0x804a040
 8048493:	ff d0                	call   *%eax
 8048495:	83 c4 10             	add    $0x10,%esp
 8048498:	c9                   	leave  
 8048499:	f3 c3                	repz ret 
 804849b:	90                   	nop
 804849c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

080484a0 <register_tm_clones>:
 80484a0:	b8 40 a0 04 08       	mov    $0x804a040,%eax
 80484a5:	2d 40 a0 04 08       	sub    $0x804a040,%eax
 80484aa:	c1 f8 02             	sar    $0x2,%eax
 80484ad:	89 c2                	mov    %eax,%edx
 80484af:	c1 ea 1f             	shr    $0x1f,%edx
 80484b2:	01 d0                	add    %edx,%eax
 80484b4:	d1 f8                	sar    %eax
 80484b6:	74 1b                	je     80484d3 <register_tm_clones+0x33>
 80484b8:	ba 00 00 00 00       	mov    $0x0,%edx
 80484bd:	85 d2                	test   %edx,%edx
 80484bf:	74 12                	je     80484d3 <register_tm_clones+0x33>
 80484c1:	55                   	push   %ebp
 80484c2:	89 e5                	mov    %esp,%ebp
 80484c4:	83 ec 10             	sub    $0x10,%esp
 80484c7:	50                   	push   %eax
 80484c8:	68 40 a0 04 08       	push   $0x804a040
 80484cd:	ff d2                	call   *%edx
 80484cf:	83 c4 10             	add    $0x10,%esp
 80484d2:	c9                   	leave  
 80484d3:	f3 c3                	repz ret 
 80484d5:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 80484d9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

080484e0 <__do_global_dtors_aux>:
 80484e0:	80 3d 40 a0 04 08 00 	cmpb   $0x0,0x804a040
 80484e7:	75 13                	jne    80484fc <__do_global_dtors_aux+0x1c>
 80484e9:	55                   	push   %ebp
 80484ea:	89 e5                	mov    %esp,%ebp
 80484ec:	83 ec 08             	sub    $0x8,%esp
 80484ef:	e8 7c ff ff ff       	call   8048470 <deregister_tm_clones>
 80484f4:	c6 05 40 a0 04 08 01 	movb   $0x1,0x804a040
 80484fb:	c9                   	leave  
 80484fc:	f3 c3                	repz ret 
 80484fe:	66 90                	xchg   %ax,%ax

08048500 <frame_dummy>:
 8048500:	b8 10 9f 04 08       	mov    $0x8049f10,%eax
 8048505:	8b 10                	mov    (%eax),%edx
 8048507:	85 d2                	test   %edx,%edx
 8048509:	75 05                	jne    8048510 <frame_dummy+0x10>
 804850b:	eb 93                	jmp    80484a0 <register_tm_clones>
 804850d:	8d 76 00             	lea    0x0(%esi),%esi
 8048510:	ba 00 00 00 00       	mov    $0x0,%edx
 8048515:	85 d2                	test   %edx,%edx
 8048517:	74 f2                	je     804850b <frame_dummy+0xb>
 8048519:	55                   	push   %ebp
 804851a:	89 e5                	mov    %esp,%ebp
 804851c:	83 ec 14             	sub    $0x14,%esp
 804851f:	50                   	push   %eax
 8048520:	ff d2                	call   *%edx
 8048522:	83 c4 10             	add    $0x10,%esp
 8048525:	c9                   	leave  
 8048526:	e9 75 ff ff ff       	jmp    80484a0 <register_tm_clones>

0804852b <print_msg>:
 804852b:	55                   	push   %ebp
 804852c:	89 e5                	mov    %esp,%ebp
 804852e:	83 ec 08             	sub    $0x8,%esp
 8048531:	83 ec 08             	sub    $0x8,%esp
 8048534:	68 30 a0 04 08       	push   $0x804a030
 8048539:	68 10 87 04 08       	push   $0x8048710
 804853e:	e8 6d fe ff ff       	call   80483b0 <printf@plt>
 8048543:	83 c4 10             	add    $0x10,%esp
 8048546:	90                   	nop
 8048547:	c9                   	leave  
 8048548:	c3                   	ret    

08048549 <complex_function>:
 8048549:	55                   	push   %ebp
 804854a:	89 e5                	mov    %esp,%ebp
 804854c:	83 ec 08             	sub    $0x8,%esp
 804854f:	83 7d 08 40          	cmpl   $0x40,0x8(%ebp)
 8048553:	7e 06                	jle    804855b <complex_function+0x12>
 8048555:	83 7d 08 5a          	cmpl   $0x5a,0x8(%ebp)
 8048559:	7e 1a                	jle    8048575 <complex_function+0x2c>
 804855b:	83 ec 0c             	sub    $0xc,%esp
 804855e:	68 13 87 04 08       	push   $0x8048713
 8048563:	e8 58 fe ff ff       	call   80483c0 <puts@plt>
 8048568:	83 c4 10             	add    $0x10,%esp
 804856b:	83 ec 0c             	sub    $0xc,%esp
 804856e:	6a 01                	push   $0x1
 8048570:	e8 5b fe ff ff       	call   80483d0 <exit@plt>
 8048575:	8b 45 08             	mov    0x8(%ebp),%eax
 8048578:	8d 48 bf             	lea    -0x41(%eax),%ecx
 804857b:	8b 55 0c             	mov    0xc(%ebp),%edx
 804857e:	89 d0                	mov    %edx,%eax
 8048580:	c1 e0 03             	shl    $0x3,%eax
 8048583:	01 d0                	add    %edx,%eax
 8048585:	01 c1                	add    %eax,%ecx
 8048587:	ba 4f ec c4 4e       	mov    $0x4ec4ec4f,%edx
 804858c:	89 c8                	mov    %ecx,%eax
 804858e:	f7 ea                	imul   %edx
 8048590:	c1 fa 03             	sar    $0x3,%edx
 8048593:	89 c8                	mov    %ecx,%eax
 8048595:	c1 f8 1f             	sar    $0x1f,%eax
 8048598:	29 c2                	sub    %eax,%edx
 804859a:	89 d0                	mov    %edx,%eax
 804859c:	6b c0 1a             	imul   $0x1a,%eax,%eax
 804859f:	29 c1                	sub    %eax,%ecx
 80485a1:	89 c8                	mov    %ecx,%eax
 80485a3:	83 c0 41             	add    $0x41,%eax
 80485a6:	c9                   	leave  
 80485a7:	c3                   	ret    

080485a8 <main>:
 80485a8:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 80485ac:	83 e4 f0             	and    $0xfffffff0,%esp
 80485af:	ff 71 fc             	pushl  -0x4(%ecx)
 80485b2:	55                   	push   %ebp
 80485b3:	89 e5                	mov    %esp,%ebp
 80485b5:	51                   	push   %ecx
 80485b6:	83 ec 14             	sub    $0x14,%esp
 80485b9:	83 ec 04             	sub    $0x4,%esp
 80485bc:	6a 21                	push   $0x21
 80485be:	6a 00                	push   $0x0
 80485c0:	68 20 51 a8 08       	push   $0x8a85120
 80485c5:	e8 26 fe ff ff       	call   80483f0 <memset@plt>
 80485ca:	83 c4 10             	add    $0x10,%esp
 80485cd:	83 ec 0c             	sub    $0xc,%esp
 80485d0:	68 1e 87 04 08       	push   $0x804871e
 80485d5:	e8 d6 fd ff ff       	call   80483b0 <printf@plt>
 80485da:	83 c4 10             	add    $0x10,%esp
 80485dd:	83 ec 0c             	sub    $0xc,%esp
 80485e0:	68 38 51 a8 08       	push   $0x8a85138
 80485e5:	68 30 51 a8 08       	push   $0x8a85130
 80485ea:	68 28 51 a8 08       	push   $0x8a85128
 80485ef:	68 20 51 a8 08       	push   $0x8a85120
 80485f4:	68 33 87 04 08       	push   $0x8048733
 80485f9:	e8 02 fe ff ff       	call   8048400 <__isoc99_scanf@plt>
 80485fe:	83 c4 20             	add    $0x20,%esp
 8048601:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 8048608:	eb 2d                	jmp    8048637 <main+0x8f>
 804860a:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804860d:	05 20 51 a8 08       	add    $0x8a85120,%eax
 8048612:	0f b6 00             	movzbl (%eax),%eax
 8048615:	0f be c0             	movsbl %al,%eax
 8048618:	83 ec 08             	sub    $0x8,%esp
 804861b:	ff 75 f4             	pushl  -0xc(%ebp)
 804861e:	50                   	push   %eax
 804861f:	e8 25 ff ff ff       	call   8048549 <complex_function>
 8048624:	83 c4 10             	add    $0x10,%esp
 8048627:	89 c2                	mov    %eax,%edx
 8048629:	8b 45 f4             	mov    -0xc(%ebp),%eax
 804862c:	05 20 51 a8 08       	add    $0x8a85120,%eax
 8048631:	88 10                	mov    %dl,(%eax)
 8048633:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
 8048637:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)
 804863b:	7e cd                	jle    804860a <main+0x62>
 804863d:	83 ec 04             	sub    $0x4,%esp
 8048640:	6a 20                	push   $0x20
 8048642:	68 44 87 04 08       	push   $0x8048744
 8048647:	68 20 51 a8 08       	push   $0x8a85120
 804864c:	e8 bf fd ff ff       	call   8048410 <strncmp@plt>
 8048651:	83 c4 10             	add    $0x10,%esp
 8048654:	85 c0                	test   %eax,%eax
 8048656:	74 12                	je     804866a <main+0xc2>
 8048658:	83 ec 0c             	sub    $0xc,%esp
 804865b:	68 13 87 04 08       	push   $0x8048713
 8048660:	e8 5b fd ff ff       	call   80483c0 <puts@plt>
 8048665:	83 c4 10             	add    $0x10,%esp
 8048668:	eb 10                	jmp    804867a <main+0xd2>
 804866a:	83 ec 0c             	sub    $0xc,%esp
 804866d:	68 65 87 04 08       	push   $0x8048765
 8048672:	e8 49 fd ff ff       	call   80483c0 <puts@plt>
 8048677:	83 c4 10             	add    $0x10,%esp
 804867a:	b8 00 00 00 00       	mov    $0x0,%eax
 804867f:	8b 4d fc             	mov    -0x4(%ebp),%ecx
 8048682:	c9                   	leave  
 8048683:	8d 61 fc             	lea    -0x4(%ecx),%esp
 8048686:	c3                   	ret    
 8048687:	66 90                	xchg   %ax,%ax
 8048689:	66 90                	xchg   %ax,%ax
 804868b:	66 90                	xchg   %ax,%ax
 804868d:	66 90                	xchg   %ax,%ax
 804868f:	90                   	nop

08048690 <__libc_csu_init>:
 8048690:	55                   	push   %ebp
 8048691:	57                   	push   %edi
 8048692:	56                   	push   %esi
 8048693:	53                   	push   %ebx
 8048694:	e8 c7 fd ff ff       	call   8048460 <__x86.get_pc_thunk.bx>
 8048699:	81 c3 67 19 00 00    	add    $0x1967,%ebx
 804869f:	83 ec 0c             	sub    $0xc,%esp
 80486a2:	8b 6c 24 20          	mov    0x20(%esp),%ebp
 80486a6:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 80486ac:	e8 bf fc ff ff       	call   8048370 <_init>
 80486b1:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 80486b7:	29 c6                	sub    %eax,%esi
 80486b9:	c1 fe 02             	sar    $0x2,%esi
 80486bc:	85 f6                	test   %esi,%esi
 80486be:	74 25                	je     80486e5 <__libc_csu_init+0x55>
 80486c0:	31 ff                	xor    %edi,%edi
 80486c2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80486c8:	83 ec 04             	sub    $0x4,%esp
 80486cb:	ff 74 24 2c          	pushl  0x2c(%esp)
 80486cf:	ff 74 24 2c          	pushl  0x2c(%esp)
 80486d3:	55                   	push   %ebp
 80486d4:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 80486db:	83 c7 01             	add    $0x1,%edi
 80486de:	83 c4 10             	add    $0x10,%esp
 80486e1:	39 f7                	cmp    %esi,%edi
 80486e3:	75 e3                	jne    80486c8 <__libc_csu_init+0x38>
 80486e5:	83 c4 0c             	add    $0xc,%esp
 80486e8:	5b                   	pop    %ebx
 80486e9:	5e                   	pop    %esi
 80486ea:	5f                   	pop    %edi
 80486eb:	5d                   	pop    %ebp
 80486ec:	c3                   	ret    
 80486ed:	8d 76 00             	lea    0x0(%esi),%esi

080486f0 <__libc_csu_fini>:
 80486f0:	f3 c3                	repz ret 

Disassembly of section .fini:

080486f4 <_fini>:
 80486f4:	53                   	push   %ebx
 80486f5:	83 ec 08             	sub    $0x8,%esp
 80486f8:	e8 63 fd ff ff       	call   8048460 <__x86.get_pc_thunk.bx>
 80486fd:	81 c3 03 19 00 00    	add    $0x1903,%ebx
 8048703:	83 c4 08             	add    $0x8,%esp
 8048706:	5b                   	pop    %ebx
 8048707:	c3                   	ret    
